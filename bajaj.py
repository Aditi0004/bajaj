# -*- coding: utf-8 -*-
"""bajaj.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oMmjP-HiuMULU5fhVV4iJjMTl_ypLIr6
"""

!pip install flask
!pip install pyngrok

from flask import Flask, request, jsonify
from pyngrok import ngrok
import re

app = Flask(__name__)

# Function to check if string is a number (int, positive)
def is_number(s):
    return s.isdigit()

# Function to alternating caps a string (starting uppercase)
def alternating_caps(s):
    result = []
    upper = True
    for c in s:
        if upper:
            result.append(c.upper())
        else:
            result.append(c.lower())
        upper = not upper
    return ''.join(result)

@app.route('/bfhl', methods=['POST'])
def process_data():
    try:
        data_json = request.get_json()
        if not data_json or 'data' not in data_json:
            return jsonify({"is_success": False, "error": "Missing 'data' key"}), 400

        input_array = data_json['data']

        even_numbers = []
        odd_numbers = []
        alphabets = []
        special_characters = []
        sum_numbers = 0

        # Collect all alphabets for concatenation later
        all_alpha_chars = []

        # Process each element in input
        for elem in input_array:
            # Check if element is a number string (integer)
            if is_number(elem):
                num = int(elem)
                sum_numbers += num
                if num % 2 == 0:
                    even_numbers.append(elem)
                else:
                    odd_numbers.append(elem)
            else:
                # Check if alphabets only (can be multiple letters)
                if re.fullmatch(r'[a-zA-Z]+', elem):
                    upper_elem = elem.upper()
                    alphabets.append(upper_elem)
                    all_alpha_chars.extend(list(upper_elem))
                else:
                    # Else treat as special character(s)
                    special_characters.append(elem)

        # Reverse collected alphabets and alternate caps
        reversed_alpha = ''.join(all_alpha_chars[::-1])
        concat_str = alternating_caps(reversed_alpha)

        # Build response JSON
        response = {
            "is_success": True,
            "user_id": "aditi_ranjan_20102004",
            "email": "aditiranjan8541@gmail.com",
            "roll_number": "22BCE2584",
            "odd_numbers": odd_numbers,
            "even_numbers": even_numbers,
            "alphabets": alphabets,
            "special_characters": special_characters,
            "sum": str(sum_numbers),
            "concat_string": concat_str
        }
        return jsonify(response), 200

    except Exception as e:
        return jsonify({"is_success": False, "error": str(e)}), 500

# To run the app in Colab, we will use ngrok to expose the port.

# 1. Start Flask app (in thread)
from threading import Thread

def run_flask():
    app.run(port=8080, debug=False, use_reloader=False)

thread = Thread(target=run_flask)
thread.start()

# 2. Then open ngrok tunnel to port 8000
from pyngrok import ngrok

ngrok.set_auth_token("31wrtouZrB4TKAFeNWFj7pTbPR6_6nQJ5KD84PWLvkLVChDyC")  # if not done before

public_url = ngrok.connect(8000).public_url
print(f"Public URL: {public_url}/bfhl")

import requests

url = "https://a28f71919787.ngrok-free.app/bfhl"  # Your ngrok URL

test_data = {
    "data": ["a", "1", "334", "4", "R", "$"]
}

response = requests.post(url, json=test_data)
print(response.status_code)
print(response.json())